{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","res","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAoBeA,EAjBA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAMC,EAAiC,EAAjCA,SAASC,EAAwB,EAAxBA,MAAMC,EAAkB,EAAlBA,YAEnC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACA,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,4BAAIR,IACJ,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCuDtCC,EAjEH,WAEV,IAFgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMYF,mBAAS,IANrB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAAS,WAPnB,mBAOTK,EAPS,KAOFC,EAPE,KAShBC,qBAAW,WACTC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEAECC,MAAM,mCAAD,OAAoCL,EAApC,mBAbV,WAaU,oBAZT,qCAUG,cAEXM,EAFW,gBAIEA,EAAIC,OAJN,OAIXC,EAJW,OAKjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MANA,2CAAH,qDAqBhB,OACE,sBAAKvB,UAAU,MAAf,UAEE,uBAAM0B,SATQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAMmBb,UAAU,cAArC,UAEE,uBACAA,UAAU,aACV6B,KAAK,OACLC,MAAOlB,EACPmB,SArBe,SAAAJ,GACnBA,EAAEC,iBACFf,EAAUc,EAAEK,OAAOF,OACnBN,QAAQC,IAAIb,MAqBR,wBAAQZ,UAAU,gBAAgB6B,KAAK,SAAvC,uBAGF,qBAAK7B,UAAU,UAAf,SACGU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO+B,gBC5CdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.920f0a97.chunk.js","sourcesContent":["import React from 'react'\nimport style from './recipe.module.css'\n\nconst Recipe = ({ title,calories,image,ingredients }) => {\n\n    return (\n        <div className={style.recipe}>\n        <h3>{title}</h3>\n        <ol>\n            {ingredients.map(ingredient => (\n                <li>{ingredient.text}</li>\n            ))}\n        </ol>\n        <p>{calories}</p>\n        <img className={style.image} src={image} alt=\"\"/>\n\n        </div>\n    );\n}\n\nexport default Recipe;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App = () => {\n\n  const APP_ID = 'f659e4a2';\n  const API_KEY = '775ed1cd5fb9b8bbc7bcc5b1045858a8';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  useEffect( () => {\n    getRecipes();\n  }, [query] );\n\n  const getRecipes = async () => {\n\n    const res = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${API_KEY }`);\n\n    const data = await res.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  }\n\n  const updateSearch = e => {\n    e.preventDefault();\n    setSearch(e.target.value);\n    console.log(search);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n\n  return(\n    <div className=\"App\">\n\n      <form onSubmit={getSearch} className=\"search-form\">\n\n        <input \n        className=\"search-bar\" \n        type=\"text\" \n        value={search} \n        onChange={updateSearch} \n        />\n\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n\n      <div className=\"recipes\">\n        {recipes.map(recipe => (\n          <Recipe \n          key={recipe.recipe.label}\n          title={recipe.recipe.label} \n          calories={recipe.recipe.calories} \n          image={recipe.recipe.image} \n          ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};"],"sourceRoot":""}